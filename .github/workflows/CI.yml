name: CI
env:
  DEBUG: napi:*
  APP_NAME: whisper
  MACOSX_DEPLOYMENT_TARGET: '10.13'
permissions:
  contents: write
  id-token: write
on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - docs/**
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - docs/**
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: ubuntu-latest
            arch: x86_64
            sys: unknown-linux
            env: gnu
          - host: ubuntu-latest
            arch: x86_64
            sys: unknown-linux
            env: musl
            docker: node:current-alpine
            qemu: linux/amd64
          - host: ubuntu-latest
            arch: aarch64
            sys: unknown-linux
            env: gnu
            docker: node:current-bookworm-slim
            qemu: linux/arm64
    name: Build - ${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{  matrix.settings.env }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: 20
            cache: yarn
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          targets: ${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{  matrix.settings.env }}
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          key: ${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{  matrix.settings.env }}-cargo-${{ matrix.settings.host }}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
      - name: Install Dependencies (Local)
        if: ${{ !matrix.settings.docker }} && ${{ !matrix.settings.qemu }}
        run: |
          yarn config set supportedArchitectures.cpu "${{ matrix.settings.arch }}"
          yarn config set supportedArchitectures.libc "${{ matrix.settings.env }}"
          yarn install
      - name: Build Addon (Local)
        if: ${{ !matrix.settings.docker }} && ${{ !matrix.settings.qemu }}
        run: |
          yarn build --target ${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{  matrix.settings.env }}
          yarn test
        env:
          CC: clang
          CXX: clang++
      - name: Setup QEMU (Docker)
        if: ${{ matrix.settings.docker }} && ${{ matrix.settings.qemu }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.settings.qemu }}
      - name: Build Addon (Docker)
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: >
            --user 0:0
            --platform ${{ matrix.settings.qemu }}
            -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db
            -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache
            -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index
            -v ${{ github.workspace }}:/build
            -w /build
          run: |
            yarn config set supportedArchitectures.cpu "${{ matrix.settings.arch }}"
            yarn config set supportedArchitectures.libc "${{ matrix.settings.env }}"
            yarn install
            yarn build
            yarn test
      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: bindings-${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{  matrix.settings.env }}
      #     path: ${{ env.APP_NAME }}.*.node
      #     if-no-files-found: error