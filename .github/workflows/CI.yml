name: CI
env:
  DEBUG: napi:*
  APP_NAME: whisper
  MACOSX_DEPLOYMENT_TARGET: '10.13'
permissions:
  contents: write
  id-token: write
on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - docs/**
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - docs/**
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            arch: x86_64
            sys: apple
            env: darwin
            test: true
          - host: macos-latest
            arch: aarch64
            sys: apple
            env: darwin
            test: false
          - host: windows-latest
            arch: x86_64
            sys: pc-windows
            env: msvc
            test: true
          - host: windows-latest
            arch: i686
            sys: pc-windows
            env: msvc
            test: true
          - host: windows-latest
            arch: aarch64
            sys: pc-windows
            env: msvc
            test: false
          - host: ubuntu-latest
            arch: x86_64
            sys: unknown-linux
            env: gnu
            test: true
          - host: ubuntu-latest
            arch: x86_64
            sys: unknown-linux
            env: musl
            docker: napi-custom-x86_64-unknown-linux-musl:latest
            qemu: linux/amd64
          - host: ubuntu-latest
            arch: aarch64
            sys: unknown-linux
            env: gnu
            docker: napi-custom-aarch64-unknown-linux-gnu:latest
            qemu: linux/arm64
          - host: ubuntu-latest
            arch: aarch64
            sys: unknown-linux
            env: musl
            docker: napi-custom-aarch64-unknown-linux-musl:latest
            qemu: linux/arm64
          # - host: ubuntu-latest
          #   arch: armv7
          #   sys: unknown-linux
          #   env: gnueabihf
          #   docker: napi-custom-armv7-unknown-linux-gnueabihf:latest
          #   qemu: linux/arm/v7
    name: Build - ${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{  matrix.settings.env }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          key: ${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{  matrix.settings.env }}-cargo-${{ matrix.settings.host }}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
      - name: Setup Node.js (Local)
        uses: actions/setup-node@v4
        if: ${{ !matrix.settings.docker }}
        with:
            node-version: 20
            cache: yarn
      - name: Setup Rust (Local)
        uses: dtolnay/rust-toolchain@stable
        if: ${{ !matrix.settings.docker }}
        with:
          toolchain: nightly
          targets: ${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{  matrix.settings.env }}
      - name: Install Dependencies (Local)
        if: ${{ !matrix.settings.docker }}
        run: |
          yarn install
      - name: Build Addon (Local)
        if: ${{ !matrix.settings.docker }}
        run: |
          yarn build --target ${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{ matrix.settings.env }}
      - name: Test Addon (Local)
        if: ${{ matrix.settings.test }} && ${{ !matrix.settings.docker }}
        run: |
          yarn test
      - name: Setup QEMU (Docker)
        if: ${{ matrix.settings.docker }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.settings.qemu }}
      - name: Setup Buildx (Docker)
        if: ${{ matrix.settings.docker }}
        uses: docker/setup-buildx-action@v3
      - name: Build Image (Docker)
        uses: docker/build-push-action@v5
        if: ${{ matrix.settings.docker }}
        with:
          platforms: ${{ matrix.settings.qemu }}
          file: docker/${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{ matrix.settings.env }}/Dockerfile
          push: false
          load: true
          tags: ${{ matrix.settings.docker }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build Addon (Docker)
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: >
            --user 0:0
            --platform ${{ matrix.settings.qemu }}
            -v ${{ github.workspace }}/.cargo-cache/git/db
            -v ${{ github.workspace }}/.cargo/registry/cache
            -v ${{ github.workspace }}/.cargo/registry/index
            -v ${{ github.workspace }}:/build
            -w /build
          run: |
            yarn install
            yarn build --target ${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{ matrix.settings.env }}
            yarn test
      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: bindings-${{ matrix.settings.arch }}-${{ matrix.settings.sys }}-${{  matrix.settings.env }}
      #     path: ${{ env.APP_NAME }}.*.node
      #     if-no-files-found: error