name: CI
env:
  DEBUG: napi:*
  APP_NAME: whisper
  MACOSX_DEPLOYMENT_TARGET: '10.13'
permissions:
  contents: write
  id-token: write
on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - docs/**
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - docs/**
jobs:
  build:
    strategy:
      matrix:
        settings:
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            setup: |
              sudo apt update
              sudo apt install musl
              sudo apt install musl-tools
    name: Build - ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: 20
            cache: yarn
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          targets: ${{ matrix.settings.target }}
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
      - name: Setup Environment
        if: ${{ matrix.settings.setup }}
        run: ${{ matrix.settings.setup }}
      - name: Install Dependencies
        run: yarn install
      - name: Build Addon
        run: yarn build --target ${{ matrix.settings.target }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error
  test:
    strategy:
        matrix:
          settings:
            - host: ubuntu-latest
              target: x86_64-unknown-linux-gnu
            - host: ubuntu-latest
              target: x86_64-unknown-linux-musl
              docker: node:current-slim
    name: Test - ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: .
      - name: Setup Node.js (Local)
        if: ${{ !matrix.settings.docker }}
        uses: actions/setup-node@v4
        with:
            node-version: 20
            cache: yarn
      - name: Install Dependencies (Local)
        if: ${{ !matrix.settings.docker }}
        run: yarn install
      - name: Run Tests (Local)
        if: ${{ !matrix.settings.docker }}
        run: yarn test
      - name: Run Tests (Docker)
        if: ${{ matrix.settings.docker }}
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: |
            yarn install
            yarn test
          
      
      
        